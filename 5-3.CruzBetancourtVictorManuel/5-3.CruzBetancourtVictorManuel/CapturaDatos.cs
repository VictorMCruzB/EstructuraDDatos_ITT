using System;  // using System;
using System.Collections.Generic;  // using System.Collections.Generic;
using System.Linq;  // using System,Linq;
using System.Text;  // using System.Text;
using System.Threading.Tasks;  // using System,Threading.Tasks;
// Espacio entre lïneas;
namespace _5_3.CruzBetancourtVictorManuel  // Nombre de la práctica;
{  // Se abre la llave;
    class CapturaDatos  // Se crea la clase CapturaDatos;
    {  // Se abre la llave;
        public void Capturar()  // Se declara un método público que no regresa valores, que lleva por nombre Capturar; 
        {  // Se abre la llave;
            int[] array1 = new int[] { 3, 6, 9, 5, 1, 4, 7, 2, 1, 3 };  // Se declara un arreglo de tipo int, que lleva por nombre array1 con 10 valores asignados;
            int[] array2 = new int[] { 8, 3, 9, 3, 11, 7, 1, 27, 12 };  // Se declara un arreglo de tipo int, que lleva por nombre array2 con 9 valores asignados;
            int[] array3 = new int[] { 10, 40, 36, 5, 24, 2, 5, 8 };  // Se declara un arreglo de tipo int, que lleva por nombre array3 con 8 valores asignados;  
            int[] array4 = new int[] { 55, 42, 0, -3, 0, -1, 2, 4, 7 };  // Se declara un arreglo de tipo int, que lleva por nombre array4 con 9 valores asignados;
            int[] array5 = new int[] { 25, 108, 1024, 12, 351, 251, 39 };  // Se declara un arreglo de tipo int, que lleva por nombre array5 con 7 valores asignados; 
            // Espacio entre código;
            Imprimir(array1);  // Se manda a llamar al método sobrecargado Imprimir con el parámetro arreglo1;
            Imprimir(array2);  // Se manda a llamar al método sobrecargado Imprimir con el parámetro arreglo2;
            Imprimir(array3);  // Se manda a llamar al método sobrecargado Imprimir con el parámetro arreglo3;
            Imprimir(array4);  // Se manda a llamar al método sobrecargado Imprimir con el parámetro arreglo4;
            Imprimir(array5);  // Se manda a llamar al método sobrecargado Imprimir con el parámetro arreglo5;
        }  // Se cierra la llave
        // Espacio entre código;
        private void Imprimir(int[] array)  // Se declara un método privado que no regresa valores, que lleva por nombre Imprimir y viene sobrecargado con un parámetros, el cuál es un array;
        {  // Se abre la llave;                                          
            Radix Rad = new Radix();  // Se declara un objeto de la clase Radix, que lleva por nombre Rad;
            // Espaco entre código;
            Console.WriteLine("Arreglo sin ordenar: ");  // Se imprime el mensaje indicado en la consola y genera un salto de línea; 
            foreach (var item in array)  // Se declara un ciclo foreach, en el cual la variable item toma los valores de array;
            {  // Se abre la llave;
                Console.Write("{0} ", item);  // Se imprimen los valores de la variable item en la consola; 
            }  // Se cierra la llave;
            // Espacio entre código;
            Rad.Ordenar(array);  // Se manda a llamar al método Ordenar
            Console.WriteLine("\nArreglo Ordenado: ");  // Se imprime el mensaje indicado en la consola y genera un salto de línea;  
            // Espacio entre código;
            foreach (var item in array)  // Se declara un ciclo foreach, en el cual la variable item toma los valores de array;
            {  // Se abre la llave;
                Console.Write("{0} ", item);  // Se imprimen los valores de la variable item en la consola;  
            }  // Se cierra la llave;
            Console.WriteLine("\n");  // Se generan dos saltos de línea;
        }  // Se cierra la llave;
    }  // Se cierra la llave;
}  // Se cierra la llave;
