using System;  // using System;
using System.Collections.Generic;  // using System.Collections.Generic; 
using System.Linq;  // using System.Linq;
using System.Text;  // using System.Text;
using System.Threading.Tasks;  // using System.Threading.Tasks;
// Espacio entre código;
namespace E_4_3.CruzBetancourtVictorManuel  // Nombre de la práctica;
{  // Se abre la llave;
    class Program  // Clase Program;
    {  // Se abre la llave;
        static void Main(string[] args)  // Clase Main;
        {  // Se abre la llave;
            var vertices = new[] { "A", "B", "C", "G", "F", "D", "E" };  // Se declara una nueva variable de tipo var que lleva por nombre vertices y se le asignan 7 valores de tipo string;
            var arist = new[]{Tuple.Create("A","B"), Tuple.Create("B","G"),  // Se declara un array de tipo var que lleva por nombre arist;
                Tuple.Create("C","B"), Tuple.Create("D","C"), Tuple.Create("C","G"),  // Se crean tuplas;
                Tuple.Create("D","F"), Tuple.Create("D","E"), Tuple.Create("F","E")};  // Se crean tuplas;
            // Espacio entre código
            var arist2 = new[]{Tuple.Create("A","B"), Tuple.Create("B","C"),  // Se declara un array de tipo var que lleva por nombre arist2;
                Tuple.Create("G","B"), Tuple.Create("F","G"), Tuple.Create("C","G"),  // Se crean tuplas;
                Tuple.Create("D","F"), Tuple.Create("D","E"), Tuple.Create("F","E")};  // Se crean tuplas;
            // Esacio entre código;
            var grafo = new Grafo<string>(vertices, arist);  // Se declara una variable de tipo var que lleva por nombre grafo e inicializamos una instancia de la clase Grafo;
            var grafo2 = new Grafo<string>(vertices, arist2);  // Se declara una variable de tipo var que lleva por nombre grafo2 e inicializamos una instancia de la clase Grafo;
            var algoritmo = new Algoritmo();  // Se declara una variable de tipo var que lleva por nombre algoritmo e inicializamos una instancia de la clase Algoritmo; 
            // Espacio entre código;
            var VertInicial = "A";  // Se declara una variablde de tipo var que llevar por nombre VertInicial y le asignamos el valor "A";
            var CamiMasCort = algoritmo.CamiMasCortFunc(grafo, VertInicial);  // Se declara una nueva variable de tipo var que lleva por nombre CamiMasCorto y le damos el valor del camino más corto generado por el método CamiMasCortFunc de la clase Algoritmo;
            foreach (var vert in vertices)  // Se declara un foreach que indica que cada valor contenido en vert pasa a vertices;
                Console.WriteLine("Camino Más Corto a {0}: {1}", vert, string.Join(" --> ", CamiMasCort(vert)));  // Se imprime en la consola el camino más corto hacia cada grafo y genera un salto de línea;
            Console.WriteLine(string.Join(" --> ", algoritmo.BFS(grafo, "A")));  // Imprime una trayectoria alternativa y genera un salto de línea;
            Console.WriteLine(string.Join(" --> ", algoritmo.BFS(grafo2, "A")));  // Imprime una trayectoria alternativa y genera un salto de línea;
            Console.ReadKey();  // Genera una pausa en el programa;
        }  // Se cierra la llave;
    }  // Se cierra la llave;
}  // Se cierra la llave;
