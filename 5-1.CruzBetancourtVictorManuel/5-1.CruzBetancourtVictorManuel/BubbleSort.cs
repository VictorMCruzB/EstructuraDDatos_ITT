using System;  // Using System;
using System.Collections.Generic;  // using System.Collections.Generic;
using System.Linq;  // using System.Linq;
using System.Text;  // using System.Text;
using System.Threading.Tasks;  // using System.Threading.Tasks;
// Espacio entre código;
namespace _5_1.CruzBetancourtVictorManuel  // Nombre de la Práctica;
{  // Se abre llave;
    class BubbleSort // Clase BubbleSort;
    {  // Se abre llave;
        private int[] array;  // Se declara un arreglo privado que lleva por nombre array;
        // Espacio entre código;
        public void Ingresar()  // Se declara un método público que lleva por nombre Cargar();
        {  // Se abre llave;
            Console.WriteLine("Método de Ordenamiento de la Burbuja  //  Bubble Sort ");  // Envía un mensaje a la consola y genera un salto de línea;
            Console.WriteLine();  // Genera un salto de línea;
            Console.Write("Ingrese la cantidad de números que desea ordenar: ");  // Envía un mensaje a la consola;
            int cant;  // Se declara una variable de tipo int que lleva por nombre cant;
            cant = int.Parse(Console.ReadLine());  // Se lee lo que es ingresado por el usuario y se le asigna a la variable cant;
            array = new int[cant];  // Se le asigna el número de posiciones que contendrá el vector;
            Console.WriteLine();  // Se genera un salto de línea;
            for (int contador = 0; contador < array.Length; contador++)  // Se declara un for que iniciará en 0 y se incrementará de uno en uno hasta el número de posiciones que tiene el vector;
            {  // Se abre llave;
                Console.Write("Ingrese número {0} ",(contador + 1)+ ": ");  // Envía un mensaje a la consola;
                cant = int.Parse(Console.ReadLine());  // Se lee lo que es ingresado por el usuario y se le asigna a la variable cant;
                array[contador] = cant;  // El valor contenido en la variable cant es asignado al array;
            }  // Se cierra llave;
        }  // Se cierra llave;
        // Espacio entre código;
        public void MetBur()  // Se declara un método público que lleva por nombre MetBur;
        {  // Se abre llave;
            Ingresar();  // Se manda a llamar al método Ingresar;
            int aux;  // Se declara una variable de tipo int que lleva por nombre aux;
            for (int i = 1; i < array.Length; i++)  // Se declara un for que iniciará en 1 y se irá incrementando de uno en uno hasta que llegue al número de posiciones que tiene el arreglo;
                for (int j = array.Length - 1; j >=i; j--)  // Se declara un nuevo for que iniciará en el número de posiciones que tenga el arreglo y se irá decrementando de uno en uno;
                {  // Se abre llave;
                    if (array[j - 1] > array[j])  // Se declara un if que comparará si el número que esta antes de otro número es mayor que ese número;
                    {  // Se abre llave;
                        aux = array[j - 1];  // El valor de array[j-1] se le asigna a la variable aux;
                        array[j - 1] = array[j];  // El valor de array[j] se le asigna a la variable array[j-1];
                        array[j] = aux;  // El valor de aux se le asigna a la variable array[j];
                    }  // Se cierra llave;
                }  // Se cierra llave;
        }  // Se cierra llave;
        // Espacio entre código;
        public void Imprimir()  // Se declara un método público que lleva por nombre Imprimir;
        {  // Se abre llave;
            MetBur();  // Se manda a llamar al método MetBur;
            Console.WriteLine();  // Se genera un salto de línea;
            Console.WriteLine("Números ingresados en orden ascendente");  // Se envía un mensaje a la consola y se genera un salto de línea;
            for (int contador = 0; contador < array.Length; contador++)  // Se declara un for que iniciará en 0 y se irá incrementando de uno en uno hasta llegar al tamaño del arreglo;
            {  // Se abre llave;
                Console.Write(array[contador] + "  ");  // Se envía un mensaje a la consola;
            }  // Se cierra llave;
            Console.ReadKey();  // Genera una pausa en el programa;
        }  // Se cierra llave;
    }  // Se cierra llave;
}  // Se cierra llave;